CREATE TABLE IF NOT EXISTS Tags (
	TagId INTEGER,
	TagName TEXT NOT NULL,
	PRIMARY KEY (TagId)
);

CREATE TABLE IF NOT EXISTS IngredientTypes (
	TypeId INTEGER,
	TypeName TEXT NOT NULL,
	PRIMARY KEY (TypeId)
);

CREATE TABLE IF NOT EXISTS Ingredients (
	IngredientId INTEGER,
	IngredientName TEXT NOT NULL,
	TypeId INTEGER,
	PRIMARY KEY (IngredientId),
	FOREIGN KEY (TypeId) REFERENCES IngredientTypes (TypeId)
		ON DELETE RESTRICT ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS Recipes (
	RecipeId INTEGER,
	RecipeName TEXT NOT NULL,
	Description TEXT NOT NULL,
	Instructions TEXT NOT NULL,
	CookTime INTEGER NOT NULL,
	Difficulty INTEGER NOT NULL CHECK (Difficulty >= 1 AND Difficulty <= 5),
	PhotoURL TEXT,
	PRIMARY KEY (RecipeId)
);

CREATE TABLE IF NOT EXISTS Trending (
	RecipeId INTEGER,
	NumberOfRecentLikes INTEGER NOT NULL,
	PRIMARY KEY (RecipeId),
	FOREIGN KEY (RecipeId) REFERENCES Recipes (RecipeId)
		ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS HasTag (
	RecipeId INTEGER,
	TagId INTEGER,
	PRIMARY KEY (RecipeId, TagId),
	FOREIGN KEY (RecipeId) REFERENCES Recipes (RecipeId)
		ON DELETE RESTRICT ON UPDATE CASCADE,
	FOREIGN KEY (TagId) REFERENCES Tags (TagId)
		ON DELETE RESTRICT ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS Requires (
	RecipeId INTEGER,
	IngredientId INTEGER,
	Amount DOUBLE,
	AmountUnit TEXT,
	PRIMARY KEY (RecipeId, IngredientId),
	FOREIGN KEY (RecipeId) REFERENCES Recipes (RecipeId)
		ON DELETE RESTRICT ON UPDATE CASCADE,
	FOREIGN KEY (IngredientId) REFERENCES Ingredients (IngredientId)
		ON DELETE RESTRICT ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS Post (
	RecipeId INTEGER,
	NumberOfLikes INTEGER NOT NULL,
	PRIMARY KEY (RecipeId),
	FOREIGN KEY (RecipeId) REFERENCES Recipes (RecipeId)
		ON DELETE RESTRICT ON UPDATE CASCADE
);
