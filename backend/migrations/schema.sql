CREATE TABLE IF NOT EXISTS Tags (
	TagId INTEGER,
	TagName TEXT NOT NULL UNIQUE,
	PRIMARY KEY (TagId)
);

CREATE TABLE IF NOT EXISTS IngredientTypes (
	TypeId INTEGER,
	TypeName TEXT NOT NULL UNIQUE,
	PRIMARY KEY (TypeId)
);

CREATE TABLE IF NOT EXISTS Ingredients (
	IngredientId INTEGER,
	IngredientName TEXT NOT NULL UNIQUE,
	TypeId INTEGER,
	PRIMARY KEY (IngredientId),
	FOREIGN KEY (TypeId) REFERENCES IngredientTypes (TypeId)
		ON DELETE RESTRICT ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS Recipes (
	RecipeId INTEGER,
	RecipeName TEXT NOT NULL UNIQUE,
	Description TEXT NOT NULL,
	Instructions TEXT NOT NULL,
	CookTime INTEGER NOT NULL CHECK (CookTime >= 0),
	Difficulty INTEGER NOT NULL CHECK (Difficulty >= 1 AND Difficulty <= 5),
	PhotoURL TEXT,
	PRIMARY KEY (RecipeId)
);

CREATE TABLE IF NOT EXISTS HasTag (
	RecipeId INTEGER,
	TagId INTEGER,
	PRIMARY KEY (RecipeId, TagId),
	FOREIGN KEY (RecipeId) REFERENCES Recipes (RecipeId)
		ON DELETE RESTRICT ON UPDATE CASCADE,
	FOREIGN KEY (TagId) REFERENCES Tags (TagId)
		ON DELETE RESTRICT ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS Requires (
	RecipeId INTEGER,
	IngredientId INTEGER,
	Amount DOUBLE,
	AmountUnit TEXT,
	PRIMARY KEY (RecipeId, IngredientId),
	FOREIGN KEY (RecipeId) REFERENCES Recipes (RecipeId)
		ON DELETE RESTRICT ON UPDATE CASCADE,
	FOREIGN KEY (IngredientId) REFERENCES Ingredients (IngredientId)
		ON DELETE RESTRICT ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS Posts (
	RecipeId INTEGER,
	NumberOfLikes INTEGER NOT NULL CHECK (NumberOfLikes >= 0),
	Rating DOUBLE NOT NULL CHECK (Rating >= 0 AND Rating <= 5),
	Reviews INTEGER NOT NULL DEFAULT 0,
	PRIMARY KEY (RecipeId),
	FOREIGN KEY (RecipeId) REFERENCES Recipes (RecipeId)
		ON DELETE RESTRICT ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS Trending (
	RecipeId INTEGER,
	NumberOfRecentLikes DOUBLE NOT NULL CHECK (NumberOfRecentLikes >= 0),
	PRIMARY KEY (RecipeId),
	FOREIGN KEY (RecipeId) REFERENCES Posts (RecipeId)
		ON DELETE CASCADE ON UPDATE CASCADE
);
